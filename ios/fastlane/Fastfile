# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)
package = load_json(json_path: "../package.json")
api_key = app_store_connect_api_key(
      key_id: ENV['APP_STORE_KEY_ID'],
      issuer_id: ENV['APP_STORE_ISSUER_ID'],
      key_content: ENV['APP_STORE_KEY_SECERT'],
      is_key_content_base64: true
    )

platform :ios do
  
  desc "Take screenshots"
  lane :screenshot do
    snapshot()
  end
  
  lane :production do 
    build_number = increment_build_number(build_number: package['build'])
    increment_version_number(version_number: package['version'].sub(/-.*$/, ''))
    match(type: 'appstore', app_identifier: ENV['IOS_APP_IDENTIFIER'], api_key:api_key)
    build_app(
      workspace: "MobilePoc.xcworkspace", 
      scheme: "MobilePoc", 
      clean: true,
      archive_path: "../../builds/mobile_poc#{build_number}.xcarchive",
      export_method: "app-store" 
    )
    snapshot()
    deliver(
      api_key: api_key,
      app_identifier:ENV['IOS_APP_IDENTIFIER'], 
      force: true,
      submit_for_review: true,
      ipa:"MobilePoc.ipa",
      precheck_include_in_app_purchases: false
    )
  end

  lane :beta do
    build_number = increment_build_number(build_number: package['build'])
    increment_version_number(version_number: package['version'].sub(/-.*$/, ''))
    
    match(type: 'appstore', app_identifier: ENV['IOS_APP_IDENTIFIER'], api_key:api_key)
    build_app(
      workspace: "MobilePoc.xcworkspace", 
      scheme: "MobilePoc", 
      clean: true,
      archive_path: "../../builds/mobile_poc#{build_number}.xcarchive",
      export_method: "app-store" 
    )
    pilot(
      api_key: api_key,
      team_id: 'H8R2L28C7L',
      app_identifier: ENV['IOS_APP_IDENTIFIER'],
      app_platform: 'ios',
      ipa: "MobilePoc.ipa",
      skip_waiting_for_build_processing: true
    )

  end

    # new lane for ad hoc distribution
  # this lane is dependent on the previous lane to build xcarchive
  desc "upload to Ad Hoc"
  lane :adhoc do
    build_number = increment_build_number(build_number: package['build'])
    increment_version_number(version_number: package['version'])
    
    match(
      type: 'adhoc',
      app_identifier: ENV['IOS_APP_IDENTIFIER'],
      api_key:api_key,
      force_for_new_devices: true
    )
    build_app(
      workspace: "MobilePoc.xcworkspace", 
      scheme: "MobilePoc", 
      clean: true,
      archive_path: "../../builds/mobile_poc#{build_number}.xcarchive",
      export_method: "ad-hoc" 
    )
    aws_s3(
        access_key: ENV["AWS_S3_ACCESS_KEY"],
        secret_access_key: ENV["AWS_S3_SECRET_KEY"],
        bucket: ENV["AWS_S3_BUCKET_NAME"],
        region: ENV["AWS_S3_REGION"],
        ipa: "MobilePoc.ipa",
        app_directory: ENV["AWS_S3_IOS_FLD"]
    ) 
  end
end
